// prisma/seed.ts

import { PrismaClient, Disease } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('ЁЯМ▒ Starting database seeding...');

  // ============================================
  // 1. SEED HOSPITALS DATA
  // ============================================
  console.log('ЁЯПе Seeding hospitals...');

  const hospitalsData = [
    {
      hospitalName: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕Вр╕нр╕│р╣Ар╕ар╕нр╕зр╕┤р╣Ар╕Кр╕╡р╕вр╕гр╕Ър╕╕р╕гр╕╡',
      hospitalCode9eDigit: 'BA0000712',
      hospitalCode9Digit: '000071200',
      hospitalCode5Digit: '00712',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕Вр╕нр╕│р╣Ар╕ар╕н',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕зр╕┤р╣Ар╕Кр╕╡р╕вр╕гр╕Ър╕╕р╕гр╕╡',
      hospitalCode9eDigit: 'EA0011266',
      hospitalCode9Digit: '001126600',
      hospitalCode5Digit: '11266',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕Чр╕▒р╣Ир╕зр╣Др╕Ы',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Щр╕▓р╣Др╕гр╣Ир╣Ар╕Фр╕╡р╕вр╕з р╕Хр╕│р╕Ър╕ер╕Чр╣Ир╕▓р╣Вр╕гр╕З',
      hospitalCode9eDigit: 'GA0007787',
      hospitalCode9Digit: '000778700',
      hospitalCode5Digit: '07787',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Чр╣Ир╕▓р╣Вр╕гр╕З р╕Хр╕│р╕Ър╕ер╕Чр╣Ир╕▓р╣Вр╕гр╕З',
      hospitalCode9eDigit: 'GA0007788',
      hospitalCode9Digit: '000778800',
      hospitalCode5Digit: '07788',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╣Бр╕Бр╣Ир╕Зр╕лр╕┤р╕Щр╕Ыр╕╣р╕Щ р╕Хр╕│р╕Ър╕ер╕кр╕▓р╕бр╣Бр╕вр╕Б',
      hospitalCode9eDigit: 'GA0007789',
      hospitalCode9Digit: '000778900',
      hospitalCode5Digit: '07789',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╣Вр╕Др╕Бр╕Ыр╕гр╕З р╕Хр╕│р╕Ър╕ер╣Вр╕Др╕Бр╕Ыр╕гр╕З',
      hospitalCode9eDigit: 'GA0007790',
      hospitalCode9Digit: '000779000',
      hospitalCode5Digit: '07790',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Щр╣Йр╕│р╕гр╣Йр╕нр╕Щ р╕Хр╕│р╕Ър╕ер╕Щр╣Йр╕│р╕гр╣Йр╕нр╕Щ',
      hospitalCode9eDigit: 'GA0007791',
      hospitalCode9Digit: '000779100',
      hospitalCode5Digit: '07791',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Ър╣Ир╕нр╕гр╕▒р╕З р╕Хр╕│р╕Ър╕ер╕Ър╣Ир╕нр╕гр╕▒р╕З',
      hospitalCode9eDigit: 'GA0007792',
      hospitalCode9Digit: '000779200',
      hospitalCode5Digit: '07792',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕зр╕▒р╕Зр╣Др╕Ьр╣И р╕Хр╕│р╕Ър╕ер╕Ър╣Ир╕нр╕гр╕▒р╕З',
      hospitalCode9eDigit: 'GA0007793',
      hospitalCode9Digit: '000779300',
      hospitalCode5Digit: '07793',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Юр╕╕р╣Ар╕Хр╕в р╕Хр╕│р╕Ър╕ер╕Юр╕╕р╣Ар╕Хр╕в',
      hospitalCode9eDigit: 'GA0007794',
      hospitalCode9Digit: '000779400',
      hospitalCode5Digit: '07794',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Юр╕╕р╕Вр╕▓р╕б р╕Хр╕│р╕Ър╕ер╕Юр╕╕р╕Вр╕▓р╕б',
      hospitalCode9eDigit: 'GA0007795',
      hospitalCode9Digit: '000779500',
      hospitalCode5Digit: '07795',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕гр╕зр╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М р╕Хр╕│р╕Ър╕ер╕ар╕╣р╕Щр╣Йр╕│р╕лр╕вр╕Ф',
      hospitalCode9eDigit: 'GA0007796',
      hospitalCode9Digit: '000779600',
      hospitalCode5Digit: '07796',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕вр╕▓р╕Зр╕Ир╣Ир╕▓ р╕Хр╕│р╕Ър╕ер╕ар╕╣р╕Щр╣Йр╕│р╕лр╕вр╕Ф',
      hospitalCode9eDigit: 'GA0007797',
      hospitalCode9Digit: '000779700',
      hospitalCode5Digit: '07797',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╣Вр╕Юр╕Чр╕░р╣Ар╕е р╕Хр╕│р╕Ър╕ер╕Лр╕▒р╕Ър╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М',
      hospitalCode9eDigit: 'GA0007798',
      hospitalCode9Digit: '000779800',
      hospitalCode5Digit: '07798',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Ър╕╢р╕Зр╕Бр╕гр╕░р╕Ир╕▒р╕Ъ р╕Хр╕│р╕Ър╕ер╕Ър╕╢р╕Зр╕Бр╕гр╕░р╕Ир╕▒р╕Ъ',
      hospitalCode9eDigit: 'GA0007799',
      hospitalCode9Digit: '000779900',
      hospitalCode5Digit: '07799',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕зр╕▒р╕Зр╣Гр╕лр╕Нр╣И р╕Хр╕│р╕Ър╕ер╕зр╕▒р╕Зр╣Гр╕лр╕Нр╣И',
      hospitalCode9eDigit: 'GA0007800',
      hospitalCode9Digit: '000780000',
      hospitalCode5Digit: '07800',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╣Вр╕Щр╕Щр╕кр╕Зр╣Ир╕▓ р╕Хр╕│р╕Ър╕ер╕вр╕▓р╕Зр╕кр╕▓р╕з',
      hospitalCode9eDigit: 'GA0007801',
      hospitalCode9Digit: '000780100',
      hospitalCode5Digit: '07801',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕Лр╕▒р╕Ър╕Щр╣Йр╕нр╕в р╕Хр╕│р╕Ър╕ер╕Лр╕▒р╕Ър╕Щр╣Йр╕нр╕в',
      hospitalCode9eDigit: 'GA0007802',
      hospitalCode9Digit: '000780200',
      hospitalCode5Digit: '07802',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕е',
      affiliation: 'р╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
      departmentDivision: 'р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕ер╕▒р╕Фр╕Бр╕гр╕░р╕Чр╕гр╕зр╕Зр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В',
    },
    {
      hospitalName: 'р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕кр╣Ир╕Зр╣Ар╕кр╕гр╕┤р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Хр╕│р╕Ър╕ер╕зр╕▒р╕Зр╕зр╕▒р╕Ф р╕Хр╕│р╕Ър╕ер╕вр╕▓р╕Зр╕кр╕▓р╕з',
      hospitalCode9eDigit: 'GA0014069',
      hospitalCode9Digit: '001406900',
      hospitalCode5Digit: '14069',
      organizationType: 'р╕гр╕▒р╕Рр╕Ър╕▓р╕е',
      healthServiceType: 'р╕ир╕╣р╕Щр╕вр╣Мр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕кр╕╕р╕В р╕нр╕Ыр╕Ч.',
      affiliation: 'р╕нр╕Зр╕Др╣Мр╕Бр╕гр╕Ыр╕Бр╕Др╕гр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕Чр╣Йр╕нр╕Зр╕Цр╕┤р╣Ир╕Щ',
      departmentDivision: '-',
    },
  ];

  for (const hospitalData of hospitalsData) {
    await prisma.hospital.upsert({
      where: { hospitalCode9eDigit: hospitalData.hospitalCode9eDigit },
      update: hospitalData,
      create: hospitalData,
    });
  }

  console.log(`тЬЕ Seeded ${hospitalsData.length} hospitals`);

  // ============================================
  // 2. SEED DISEASES DATA
  // ============================================
  console.log('ЁЯжа Seeding diseases...');

  const diseasesData = [
    {
      engName: 'Dengue Fever',
      thaiName: 'р╣Др╕Вр╣Йр╣Ар╕ер╕╖р╕нр╕Фр╕нр╕нр╕Б',
      shortName: 'DF',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Др╕зр╕гр╕▒р╕кр╕Чр╕╡р╣Ир╕бр╕╡р╕вр╕╕р╕Зр╣Ар╕Ыр╣Зр╕Щр╕Юр╕▓р╕лр╕░р╕Щр╕│р╣Вр╕гр╕Д р╕нр╕▓р╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕Др╕ер╣Йр╕▓р╕вр╣Др╕Вр╣Йр╕лр╕зр╕▒р╕Фр╣Гр╕лр╕Нр╣И',
    },
    {
      engName: 'Malaria',
      thaiName: 'р╕бр╕▓р╕ер╕▓р╣Ар╕гр╕╡р╕в',
      shortName: 'MAL',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╕Ыр╕гр╕кр╕┤р╕Хр╕Чр╕╡р╣Ир╕бр╕╡р╕вр╕╕р╕Зр╕Бр╣Йр╕Щр╕Ыр╕ер╣Ир╕нр╕Зр╣Ар╕Ыр╣Зр╕Щр╕Юр╕▓р╕лр╕░',
    },
    {
      engName: 'Tuberculosis',
      thaiName: 'р╕зр╕▒р╕Ур╣Вр╕гр╕Д',
      shortName: 'TB',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Бр╕Ър╕Др╕Чр╕╡р╣Ар╕гр╕╡р╕вр╕Чр╕╡р╣Ир╕Бр╕гр╕░р╕Чр╕Ър╕Хр╣Ир╕нр╕Ыр╕нр╕Фр╣Ар╕Ыр╣Зр╕Щр╕лр╕ер╕▒р╕Б',
    },
    {
      engName: 'COVID-19',
      thaiName: 'р╣Вр╕Др╕зр╕┤р╕Ф-19',
      shortName: 'COVID',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Др╕зр╕гр╕▒р╕кр╣Вр╕Др╣Вр╕гр╕Щр╕▓р╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣Мр╣Гр╕лр╕бр╣И 2019',
    },
    {
      engName: 'Influenza',
      thaiName: 'р╣Др╕Вр╣Йр╕лр╕зр╕▒р╕Фр╣Гр╕лр╕Нр╣И',
      shortName: 'FLU',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Др╕зр╕гр╕▒р╕кр╕Чр╕▓р╕Зр╣Ар╕Фр╕┤р╕Щр╕лр╕▓р╕вр╣Гр╕И',
    },
    {
      engName: 'Hand Foot and Mouth Disease',
      thaiName: 'р╣Вр╕гр╕Др╕бр╕╖р╕н р╣Ар╕Чр╣Йр╕▓ р╕Ыр╕▓р╕Б',
      shortName: 'HFMD',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Др╕зр╕гр╕▒р╕кр╕Чр╕╡р╣Ир╕Юр╕Ър╕Ър╣Ир╕нр╕вр╣Гр╕Щр╣Ар╕Фр╣Зр╕Бр╣Ар╕ер╣Зр╕Б',
    },
    {
      engName: 'Hepatitis A',
      thaiName: 'р╕Хр╕▒р╕Ър╕нр╕▒р╕Бр╣Ар╕кр╕Ър╣Ар╕н',
      shortName: 'HAV',
      details: 'р╣Вр╕гр╕Др╕Хр╕┤р╕Фр╣Ар╕Кр╕╖р╣Йр╕нр╣Др╕зр╕гр╕▒р╕кр╕Чр╕╡р╣Ир╕Бр╕гр╕░р╕Чр╕Ър╕Хр╣Ир╕нр╕Хр╕▒р╕Ъ',
    },
    {
      engName: 'Diarrhea',
      thaiName: 'р╣Вр╕гр╕Др╕Чр╣Йр╕нр╕Зр╣Ар╕кр╕╡р╕в',
      shortName: 'DIA',
      details: 'р╕нр╕▓р╕Бр╕▓р╕гр╕Цр╣Ир╕▓р╕вр╣Ар╕лр╕ер╕зр╕Чр╕╡р╣Ир╣Ар╕Бр╕┤р╕Фр╕Ир╕▓р╕Бр╣Ар╕Кр╕╖р╣Йр╕нр╣Вр╕гр╕Др╕Хр╣Ир╕▓р╕Зр╣Ж',
    },
  ];

  const createdDiseases: Disease[] = [];
  for (const diseaseData of diseasesData) {
    const disease = await prisma.disease.upsert({
      where: { 
        engName_isActive: { 
          engName: diseaseData.engName, 
          isActive: true 
        } 
      },
      update: diseaseData,
      create: diseaseData,
    });
    createdDiseases.push(disease);
  }

  console.log(`тЬЕ Seeded ${diseasesData.length} diseases`);

  // ============================================
  // 3. SEED SYMPTOMS DATA
  // ============================================
  console.log('ЁЯМбя╕П Seeding symptoms...');

  const symptomsData = [
    // Dengue Fever symptoms
    { diseaseId: createdDiseases[0].id, name: 'р╣Др╕Вр╣Йр╕кр╕╣р╕З' },
    { diseaseId: createdDiseases[0].id, name: 'р╕Ыр╕зр╕Фр╕лр╕▒р╕з' },
    { diseaseId: createdDiseases[0].id, name: 'р╕Ыр╕зр╕Фр╣Ар╕бр╕╖р╣Ир╕нр╕вр╕Хр╕▓р╕бр╕Хр╕▒р╕з' },
    { diseaseId: createdDiseases[0].id, name: 'р╕Ьр╕╖р╣Ир╕Щр╣Бр╕Фр╕З' },
    { diseaseId: createdDiseases[0].id, name: 'р╣Ар╕ер╕╖р╕нр╕Фр╕нр╕нр╕Бр╕Ьр╕┤р╕Фр╕Ыр╕Бр╕Хр╕┤' },
    
    // Malaria symptoms
    { diseaseId: createdDiseases[1].id, name: 'р╣Др╕Вр╣Йр╕кр╕▒р╣Ир╕Щ' },
    { diseaseId: createdDiseases[1].id, name: 'р╕Ыр╕зр╕Фр╕лр╕▒р╕з' },
    { diseaseId: createdDiseases[1].id, name: 'р╕Др╕ер╕╖р╣Ир╕Щр╣Др╕кр╣Йр╕нр╕▓р╣Ар╕Ир╕╡р╕вр╕Щ' },
    
    // TB symptoms
    { diseaseId: createdDiseases[2].id, name: 'р╣Др╕нр╣Ар╕гр╕╖р╣Йр╕нр╕гр╕▒р╕З' },
    { diseaseId: createdDiseases[2].id, name: 'р╣Ар╕кр╕бр╕лр╕░р╣Ар╕Ыр╣Зр╕Щр╣Ар╕ер╕╖р╕нр╕Ф' },
    { diseaseId: createdDiseases[2].id, name: 'р╣Др╕Вр╣Й' },
    { diseaseId: createdDiseases[2].id, name: 'р╕Щр╣Йр╕│р╕лр╕Щр╕▒р╕Бр╕ер╕Ф' },
    
    // COVID-19 symptoms
    { diseaseId: createdDiseases[3].id, name: 'р╣Др╕Вр╣Й' },
    { diseaseId: createdDiseases[3].id, name: 'р╣Др╕нр╣Бр╕лр╣Йр╕З' },
    { diseaseId: createdDiseases[3].id, name: 'р╕лр╕▓р╕вр╣Гр╕Ир╕ер╕│р╕Ър╕▓р╕Б' },
    { diseaseId: createdDiseases[3].id, name: 'р╕кр╕╣р╕Нр╣Ар╕кр╕╡р╕вр╕гр╕кр╕Кр╕▓р╕Хр╕┤р╣Бр╕ер╕░р╕Бр╕ер╕┤р╣Ир╕Щ' },
    
    // Influenza symptoms
    { diseaseId: createdDiseases[4].id, name: 'р╣Др╕Вр╣Йр╕кр╕╣р╕Зр╕Бр╕░р╕Чр╕▒р╕Щр╕лр╕▒р╕Щ' },
    { diseaseId: createdDiseases[4].id, name: 'р╣Др╕н' },
    { diseaseId: createdDiseases[4].id, name: 'р╕Ыр╕зр╕Фр╕лр╕▒р╕з' },
    { diseaseId: createdDiseases[4].id, name: 'р╣Ар╕бр╕╖р╣Ир╕нр╕вр╕Бр╕ер╣Йр╕▓р╕бр╣Ар╕Щр╕╖р╣Йр╕н' },
  ];

  for (const symptomData of symptomsData) {
    await prisma.symptom.upsert({
      where: {
        diseaseId_name_isActive: {
          diseaseId: symptomData.diseaseId,
          name: symptomData.name,
          isActive: true,
        },
      },
      update: symptomData,
      create: symptomData,
    });
  }

  console.log(`тЬЕ Seeded ${symptomsData.length} symptoms`);

  // ============================================
  // 4. SEED POPULATION DATA
  // ============================================
  console.log('ЁЯСе Seeding population data...');

  const currentYear = new Date().getFullYear();
  const populationData = hospitalsData.map((hospital) => ({
    year: currentYear,
    hospitalCode9eDigit: hospital.hospitalCode9eDigit,
    count: Math.floor(Math.random() * 50000) + 10000, // Random population between 10k-60k
  }));

  for (const popData of populationData) {
    await prisma.population.upsert({
      where: {
        year_hospitalCode9eDigit_isActive: {
          year: popData.year,
          hospitalCode9eDigit: popData.hospitalCode9eDigit,
          isActive: true,
        },
      },
      update: { count: popData.count },
      create: popData,
    });
  }

  console.log(`тЬЕ Seeded population data for ${populationData.length} hospitals`);

  // ============================================
  // 5. SEED USERS DATA
  // ============================================
  console.log('ЁЯСд Seeding users...');

  const hashedPassword = await bcrypt.hash('password123', 12);

  const usersData = [
    {
      username: 'superadmin',
      password: hashedPassword,
      userRole: 'SUPERADMIN' as const,
      userRoleId: 1,
      name: 'р╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ър╕лр╕ер╕▒р╕Б',
      hospitalCode9eDigit: null,
    },
    {
      username: 'admin',
      password: hashedPassword,
      userRole: 'ADMIN' as const,
      userRoleId: 2,
      name: 'р╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ъ',
      hospitalCode9eDigit: 'EA0011266', // р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕зр╕┤р╣Ар╕Кр╕╡р╕вр╕гр╕Ър╕╕р╕гр╕╡
    },
    {
      username: 'user1',
      password: hashedPassword,
      userRole: 'USER' as const,
      userRoleId: 3,
      name: 'р╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕зр╕┤р╣Ар╕Кр╕╡р╕вр╕гр╕Ър╕╕р╕гр╕╡',
      hospitalCode9eDigit: 'EA0011266', // р╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕ер╕зр╕┤р╣Ар╕Кр╕╡р╕вр╕гр╕Ър╕╕р╕гр╕╡
    },
    {
      username: 'user2',
      password: hashedPassword,
      userRole: 'USER' as const,
      userRoleId: 3,
      name: 'р╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣И р╕гр╕Ю.р╕кр╕Х.р╕Чр╣Ир╕▓р╣Вр╕гр╕З',
      hospitalCode9eDigit: 'GA0007788', // р╕гр╕Ю.р╕кр╕Х.р╕Чр╣Ир╕▓р╣Вр╕гр╕З
    },
  ];

  for (const userData of usersData) {
    await prisma.user.upsert({
      where: {
        username_isActive: {
          username: userData.username,
          isActive: true,
        },
      },
      update: {
        name: userData.name,
        userRole: userData.userRole,
        userRoleId: userData.userRoleId,
        hospitalCode9eDigit: userData.hospitalCode9eDigit,
      },
      create: userData,
    });
  }

  console.log(`тЬЕ Seeded ${usersData.length} users`);

  // ============================================
  // 6. SEED PERMISSIONS DATA
  // ============================================
  console.log('ЁЯФР Seeding permissions...');

  const permissionsData = [
    // Superadmin permissions (roleId: 1)
    { roleId: 1, permissionCode: 'PATIENT_VISIT_CREATE', canAccess: true },
    { roleId: 1, permissionCode: 'PATIENT_VISIT_READ', canAccess: true },
    { roleId: 1, permissionCode: 'PATIENT_VISIT_UPDATE', canAccess: true },
    { roleId: 1, permissionCode: 'PATIENT_VISIT_DELETE', canAccess: true },
    { roleId: 1, permissionCode: 'DISEASE_MANAGE', canAccess: true },
    { roleId: 1, permissionCode: 'HOSPITAL_MANAGE', canAccess: true },
    { roleId: 1, permissionCode: 'USER_MANAGE', canAccess: true },
    { roleId: 1, permissionCode: 'REPORT_EXPORT', canAccess: true },

    // Admin permissions (roleId: 2)
    { roleId: 2, permissionCode: 'PATIENT_VISIT_CREATE', canAccess: true },
    { roleId: 2, permissionCode: 'PATIENT_VISIT_READ', canAccess: true },
    { roleId: 2, permissionCode: 'PATIENT_VISIT_UPDATE', canAccess: true },
    { roleId: 2, permissionCode: 'PATIENT_VISIT_DELETE', canAccess: true },
    { roleId: 2, permissionCode: 'DISEASE_READ', canAccess: true },
    { roleId: 2, permissionCode: 'HOSPITAL_READ', canAccess: true },
    { roleId: 2, permissionCode: 'USER_MANAGE_LIMITED', canAccess: true },
    { roleId: 2, permissionCode: 'REPORT_EXPORT', canAccess: true },

    // User permissions (roleId: 3)
    { roleId: 3, permissionCode: 'PATIENT_VISIT_READ', canAccess: true },
    { roleId: 3, permissionCode: 'DISEASE_READ', canAccess: true },
    { roleId: 3, permissionCode: 'HOSPITAL_READ', canAccess: true },
    { roleId: 3, permissionCode: 'REPORT_EXPORT_LIMITED', canAccess: true },
    { roleId: 3, permissionCode: 'PASSWORD_CHANGE', canAccess: true },
  ];

  for (const permissionData of permissionsData) {
    await prisma.permission.upsert({
      where: {
        roleId_permissionCode: {
          roleId: permissionData.roleId,
          permissionCode: permissionData.permissionCode,
        },
      },
      update: { canAccess: permissionData.canAccess },
      create: permissionData,
    });
  }

  console.log(`тЬЕ Seeded ${permissionsData.length} permissions`);

  console.log('ЁЯОЙ Database seeding completed successfully!');
  console.log('\nЁЯУЭ Default login credentials:');
  console.log('Superadmin: superadmin / password123');
  console.log('Admin: admin / password123');
  console.log('User: user1 / password123');
  console.log('User: user2 / password123');
}

main()
  .catch((e) => {
    console.error('тЭМ Seeding failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });